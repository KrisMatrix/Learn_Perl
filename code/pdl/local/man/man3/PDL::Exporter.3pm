.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Exporter 3"
.TH Exporter 3 "2022-02-14" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDL::Exporter \- PDL export control
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Implements the standard conventions for
import of \s-1PDL\s0 modules in to the namespace
.PP
Hopefully will be extended to allow fine
control of which namespace is used.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use PDL::Exporter;
.PP
.Vb 3
\& use PDL::MyModule;       # Import default function list \*(Aq:Func\*(Aq
\& use PDL::MyModule \*(Aq\*(Aq;    # Import nothing (OO)
\& use PDL::MyModule \*(Aq...\*(Aq; # Same behaviour as Exporter
.Ve
.SH "SUMMARY"
.IX Header "SUMMARY"
\&\f(CW\*(C`PDL::Exporter\*(C'\fR is a drop-in replacement for the Exporter
module. It confers the standard \s-1PDL\s0 export conventions to your module.
Usage is fairly straightforward and best illustrated by an example. The
following shows typical usage near the top of a simple \s-1PDL\s0 module:
.PP
.Vb 1
\&   package PDL::MyMod;
\&
\&   use strict;
\&   
\&   # For Perl 5.6:
\&   use vars qw($VERSION @ISA @EXPORT @EXPORT_OK %EXPORT_TAGS);
\&   # For more modern Perls:
\&   our ($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS);
\&   
\&   require PDL::Exporter;
\&   
\&   @ISA = qw(PDL::Exporter);
\&   @EXPORT_OK = qw(inc myfunc); # these will be exported by default
\&   %EXPORT_TAGS = (Func=>[@EXPORT_OK],
\&                   Internal => [qw/internfunc1 internfunc2/],
\&                  );
\&   
\&    # ... body of your module
\&   
\&   1; # end of simple module
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Exporter
.SH "AUTHOR"
.IX Header "AUTHOR"
Copyright (C) Karl Glazebrook (kgb@aaoepp.aao.gov.au).
Some docs by Christian Soeller.
All rights reserved. There is no warranty. You are allowed
to redistribute this software / documentation under certain
conditions. For details, see the file \s-1COPYING\s0 in the \s-1PDL\s0
distribution. If this file is separated from the \s-1PDL\s0 distribution,
the copyright notice should be included in the file.

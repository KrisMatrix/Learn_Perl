.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PrintControl 3"
.TH PrintControl 3 "2022-02-14" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDL::Perldl2::Plugin::PrintControl \- disable default print output
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  pdl> $x = 3;
\&  3
\&  pdl> $_REPL\->load_plugin(\*(AqPDL::Perldl2::Plugin::PrintControl\*(Aq);
\&
\&  pdl> $x;
\&
\&  pdl> $_REPL\->print_by_default(1);
\&  1
\&  pdl> $x;
\&  3
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
By default the Devel::REPL always prints the results of its
evaluation.  This is fine for small objects but for things
like large data objects (e.g. a 100x100 matrix in \s-1PDL\s0) the
result can be hundreds of lines of output for each command.
.PP
This plugin disables the default print output and adds an
attribute with accessor method \f(CW\*(C`print_by_default\*(C'\fR which can be
used to toggle the print default on or off.
.SH "METHODS"
.IX Header "METHODS"
.SS "print_by_default"
.IX Subsection "print_by_default"
By default, the \f(CW\*(C`PrintControl\*(C'\fR plugin sets \f(CW\*(C`print_by_default\*(C'\fR to
0 (false), which disables automatic printing of results.
Call the print_by_default accessor with a 1 (true value) to enable
default printing.
.SS "do_print"
.IX Subsection "do_print"
This is a convenience accessor for the print_by_default attribute.
If you call this method without a value, it toggles the current
setting.  Otherwise, it just sets print_by_default to the value.
.PP
It is also available in the \f(CW\*(C`pdl2\*(C'\fR shell as the do_print sub
with the same operation but with an implicit use of \f(CW$_REPL\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CW\*(C`Devel::REPL\*(C'\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Marshall, \f(CW\*(C`<chm at cpan dot org>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2010 by Christopher Marshall
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

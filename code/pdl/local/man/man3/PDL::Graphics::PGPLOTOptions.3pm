.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "PGPLOTOptions 3"
.TH PGPLOTOptions 3 "2022-02-14" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDL::Graphics::PGPLOTOptions \- Setting PGPLOT options
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use PGPLOTOptions qw('default_options');
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package contains one function (at present) which returns PDL::Option
objects for default settings for plot windows and plot commands. This
should be complemented by functions that could affect this such as
file reading commands etc.
.SH "OPTIONS"
.IX Header "OPTIONS"
The following is a listing of options that are set in this file and what
they do and what their default value is
.SS "Window specific options"
.IX Subsection "Window specific options"
These options modify the appearance of windows and can also modify the
default settings for creation of plot axes etc.
.IP "Device" 4
.IX Item "Device"
The default \s-1PGPLOT\s0 device to use. The default value is set to the \s-1PGPLOT_DEV\s0
environment variable if set, otherwise to '?'.
.IP "AxisColour" 4
.IX Item "AxisColour"
The colour with which to draw axes. Default value=3 (Green)
.IP "HardLW, HardCH, HardFont, HardAxisColour, HardColour" 4
.IX Item "HardLW, HardCH, HardFont, HardAxisColour, HardColour"
The linewidth, character height, font and axis colour to use on hardcopy
devices. The default values are HardLW=1, HardCH=1.4, HardFont=2 (Roman),
HardAxisColour=1 (Black) and HardColour=1 as well. The latter is the default
plot colour to use on hardcopy devices.
.IP "Axis" 4
.IX Item "Axis"
The axis style to use. See the PDL::Graphics::PGPLOT::Window documentation
for details. It defaults to 'Normal' which is a labelled box. Valid arguments
are 'Empty', 'Box', 'Normal', 'Axes', 'Grid', 'LogX', 'LogY', 'LogXY'.
.IP "AspectRatio" 4
.IX Item "AspectRatio"
The aspect ratio of the output device. The default value is device dependent.
.IP "WindowWidth" 4
.IX Item "WindowWidth"
The width of the output window in inches and defaults to as big as possible.
.IP "WindowXSize and WindowYSize" 4
.IX Item "WindowXSize and WindowYSize"
These are alternatives to AspectRatio and WindowWidth.
.IP "WindowName" 4
.IX Item "WindowName"
The name of the window \- can later be retrieved using \fBname()\fR. It defaults
to 'Window'+Window \s-1ID.\s0
.IP "NXPanel" 4
.IX Item "NXPanel"
The number of panels in the X\-direction \- defaults to 1
.IP "NYPanel" 4
.IX Item "NYPanel"
The number of panels in the Y\-direction \- defaults to 1
.IP "Justify" 4
.IX Item "Justify"
A boolean value which, if true, causes both axes to drawn
to the same scale; see
the \s-1PGPLOT\s0 \f(CW\*(C`pgenv()\*(C'\fR command for more information.
.IP "TightLabels" 4
.IX Item "TightLabels"
Boolean value which, if true, causes axis labels to be pulled
slightly closer to the main viewport than usual.  That's handy
for making multi-panel plots.  Undef (the default) is equivalent
to 0 for panels with NYPanels <= 1 and 1 for panels with NYPanels > 1.
.IP "TitleSize" 4
.IX Item "TitleSize"
The relative size of a plot or image title, compared to other annotations.
Defaults to 1.0 (original behavior) but can be set to, e.g., 1.5 to 
emphasize graph titles in a multipanel plot.
.IP "Border" 4
.IX Item "Border"
Adjust the spacing around the plot. See the documentation in
PDL::Graphics::PGPLOT::Window for details.
.IP "CharSize" 4
.IX Item "CharSize"
The default charsize for the plot \- used when annotating the axes for
instance. It defaults to 1.
.IP "PlotPosition" 4
.IX Item "PlotPosition"
The position of the plot in normalised coordinates.
.IP "Erase" 4
.IX Item "Erase"
Explicitly erase the plotting surface, normally required when making new
plots with PlotPosition.
.SS "Plot specific options"
.IX Subsection "Plot specific options"
For the moment see the \f(CW\*(C`PDL::Graphics::PGPLOT::Window\*(C'\fR documentation for
these.
.SS "set_pgplot_options"
.IX Subsection "set_pgplot_options"
This function allows the user to set the default \s-1PGPLOT\s0 options. It
is particularly useful in the \f(CW\*(C`.perldlrc\*(C'\fR file since one can do
.PP
.Vb 2
\&  use PDL::Graphics::PGPLOTOptions (\*(Aqset_pgplot_options\*(Aq);
\&  set_pgplot_options(\*(AqDevice\*(Aq => \*(Aq/xs\*(Aq, \*(AqHardLW\*(Aq => 3);
.Ve
.PP
for instance to set the default values. The main drawback is that the
routine is rather unflexible with no synonyms or case-insensitivity.

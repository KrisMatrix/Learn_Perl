.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Perldl2 3"
.TH Perldl2 3 "2022-03-11" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDL::Perldl2::Profile::Perldl2 \- profile for Perldl2 shell
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    system> re.pl \-\-profile=PDL::Perldl2::Profile::Perldl2  # unix\-ish shell
\&    system> re    \-\-profile=PDL::Perldl2::Profile::Perldl2  # win32 CMD shell
\&
\&    Perldl2 Shell v0.008
\&          PDL comes with ABSOLUTELY NO WARRANTY. For details, see the file
\&          \*(AqCOPYING\*(Aq in the PDL distribution. This is free software and you
\&          are welcome to redistribute it under certain conditions, see
\&          the same file for details.
\&    
\&    Loaded plugins:
\&      CleanErrors
\&      Commands
\&      Completion
\&      CompletionDriver::INC
\&      CompletionDriver::Keywords
\&      CompletionDriver::LexEnv
\&      CompletionDriver::Methods
\&      DDS
\&      FindVariable
\&      History
\&      Interrupt
\&      LexEnv
\&      MultiLine::PPI
\&      NiceSlice
\&      PDLCommands
\&      Packages
\&      PrintControl
\&      ReadLineHistory
\&    
\&    
\&    Type \*(Aqhelp\*(Aq for online help
\&    
\&    Type Ctrl\-D or quit to exit
\&    
\&    Loaded PDL v2.006
\&    
\&    pdl>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This profile is for development of the new \s-1PDL\s0 shell (version 2).
The preferred method to start the new shell is via the \f(CW\*(C`pdl2\*(C'\fR
command.  This documentation is provided for \f(CW\*(C`Devel::REPL\*(C'\fR coders
that may wish to use this profile directly for their development.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\f(CW\*(C`Devel::REPL\*(C'\fR, \f(CW\*(C`Devel::REPL::Profile\*(C'\fR, and \f(CW\*(C`PDL::Perldl\*(C'\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Marshall, \f(CW\*(C`<chm at cpan dot org>\*(C'\fR
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2010 by Christopher Marshall
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

#!/usr/bin/perl
use warnings;
use strict;
use Getopt::Long;
use experimental 'signatures';
use Data::Dumper;

=pod

=head1 NAME 

  change_delimiter

=head1 SYNOPSIS

  A utility that takes csv files as input and creates the same
  file with a different delimiter.

=head1 USAGE

 change_delimiter [OPTION] [FILE]

 -o, --output  output file name
 -t, --type    delimiter type. Can be '|', ':', tab. space.

=cut

if (!$ARGV[0]) {
  die "Error: no input file provided.\n";
}

my $type = "tab";           # by default utility does tab delimitation.
my $output = "";            # an output file is not required. It will
                            # over write existing file.
GetOptions("type=s" => \$type, "output=s" => \$output);
my $input_file = $ARGV[0];

#print "$type and $output\n";
if ($type eq "tab") {$type = "\t"}
elsif ($type eq "pipe") {$type = "|"}
elsif ($type eq "colon") {$type = ":"}
elsif ($type eq "space") {$type = "    "}

my $outFile;
if ($output ne "") {
  open($outFile, ">", $output) or die "Could not open $output\n";
}
open(my $inFile, "<", $input_file) or die "Could not open $input_file\n";
while(my $line = <$inFile>) {
  chomp $line;
  $line =~ s/,/$type/g;
  if ($output eq "") {
    print "$line\n";
  }
  else {
    print $outFile "$line\n";
  }
}
close($inFile);

if ($output ne "") {
  close($outFile);
}
